name: Build iOS App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Permite executar manualmente

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build web assets
      run: npm run build
        
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
        
    - name: Sync iOS platform
      run: npx cap sync ios
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Debug - List directory contents
      run: |
        echo "=== Root directory ==="
        ls -la
        echo "=== iOS directory ==="
        ls -la ios/
        echo "=== iOS App directory ==="
        ls -la ios/App/
        
    - name: Install CocoaPods
      run: |
        cd ios/App
        sudo gem install cocoapods
        pod install --verbose
        
    - name: List available schemes
      run: |
        cd ios/App
        echo "=== Available schemes ==="
        xcodebuild -list -workspace App.xcworkspace
        
    - name: Build iOS app for Xcode installation
      run: |
        cd ios/App
        echo "=== Building iOS app for Xcode installation ==="
        set -e
        # Build for device installation via Xcode
        xcodebuild -workspace App.xcworkspace -scheme App -configuration Debug -destination generic/platform=iOS -UseModernBuildSystem=NO CODE_SIGNING_ALLOWED=NO build -verbose 2>&1 | tee build.log
        if [ $? -ne 0 ]; then
          echo "=== Build failed, showing logs ==="
          cat build.log
          exit 1
        fi
        
    - name: Package app for Xcode installation
      run: |
        cd ios/App
        echo "=== Packaging app for Xcode installation ==="
        # Find the built app
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "App.app" -type d | head -1)
        if [ -z "$APP_PATH" ]; then
          echo "❌ App not found in DerivedData"
          echo "=== Build logs ==="
          cat build.log
          exit 1
        fi
        
        echo "✅ Found app at: $APP_PATH"
        mkdir -p build
        cp -r "$APP_PATH" build/
        echo "✅ App copied to build directory"
        ls -la build/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.run_number }}
        path: ios/App/build/
        retention-days: 30
